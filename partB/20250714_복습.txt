클래스 정의 주요 개념

1.구성요서
  1) 멤버 변수 : static, 인스턴스 변수(필드, 프로퍼티, 속성....)
  2) 멤버 메소드 : static, 인스턴스 메소드

  * 인스턴스 : 생성된 객체
  * static : 클래스 수준으로 정보를 저장/기능을 제공

2. 접근제어자 : Access Modifier
  - public, default(키워드 안씀), private, protected(상속)
  - 멤버 변수 or 멤버 메소드에 public, private, default

※ 퀴즈
 1) 패키지가 다를 때는 사용 못하게 접을 제한하는 것은?
   정답 : default(기본)
 2) public 으로 설정된 멤버 변수를 다른 패키지에서 접근 할 때 필요한 것은?
   정답 : import - 자바에서는 일반적으로 클래스 임포트

  - private : 객체지향 프로그래밍의 은닉성(Encapsulation)

3. 인스턴스 멤버 변수의 접근제어자 : private
  - 인스턴스 변수를 다른 클래스에서 직접 값을 변경할 수 없도록 함
  - 인스턴스 메소드의 경우 내부 구현을 숨길 때 private 사용
  - 처리되는 비지니스 로직이 복잡할 때
  - 실제 데이터의 접근은 getter 또는 setter 구현하여 제공

예시) 점수 0~100 값의 제한을 setter 에서 검사하고 저장

4. getter 와 setter
  - RW(Read 와 Write)
  - 멤버변수 private 인 경우에 구현. 필요에 따라 getter 와 setter 중 하나만 구현하기도 함

  1) getter : 데이터 읽기 기능 메소드. 리턴 return 이 반드시 있어야 함
	=> 인스턴스 변수와 리턴 타입 선언이 일치

  2) setter : 데이터 저장(Write) 기능 메소드. 인자가 있어야 함
	=> 인스턴스 변수와 인자 타입 선언이 일치

※ 생성된 객체의 자기자신을 가리키는 키워드는 ?
   정답 : this
   => new 클래스이름() 연산할 때마다 객체가 생성되고 메소드 안에서 this 로 이 객체의 멤버를 가리킵니다.

5. 멤버 변수 static 의 특징
  => static 메소드는 클래스 수준의 멤버들(변수와 메소드)만 사용 가능합니다.
     static 변소와 static 메소드만 사용 가능
     static 요소들은 메모리 영역이 '메소드' 라고 부르는 곳에 저장(클래스 영역)

※ 멤버 변수의 scope 은?
   정답 : 전역변수

6. 생성자
  생성자란 메소드 입니다. new 연산으로 객체가 만들어질 때 실행
  1) 생성자 클래스 이름과 동일하게 합니다.
  2) 메소드 원형(프로토타입) : 접근권한, static 여부, 리턴 타입, 메소드이름(인자 변수 선언)
     이 중에서 생서자 메소드는 접근권한, 클래스이름과 동일한 메소드 이름, 인자 변수 3가지만 정의
     => 생성자는 리턴 타입이 없다.
  3) 기본 생성자는 인자 변수 선언이 없습니다. 컴파일러가 자동을 만들어 줍니다.
     단, 커스텀 생성자를 만들면 그렇지 않습니다.
  4) 커스텀 생서자 : 인자 변수 선언하여 외부에서 데이터를 전달받아 인스턴스 변수 초기화하는 것이 일반적입니다.
  5) 커스텀 생성자를 개발자가 만들면 기본생서자는 컴파일러가 자동으로 안 만들어 줍니다.
  6) 기본 생성자 또는 커스텀 생성자 모두 대입문 초기화 뿐만 아니라 모든 명령문을 실행 할 수 있습니다.
     특히 간단하 연산식은 간혹 유용하게 쓰입니다.